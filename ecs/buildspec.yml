version: 0.2

phases:
  install:
    runtime-versions:
      python: "3.12.10"

  pre_build:
    commands:
      - echo pre_build started on `date`
      - aws ecr get-login-password --region "$AWS_REGION" | docker login  --username AWS --password-stdin "$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
      - $(echo "$DOCKERHUB_CREDS" | sed 's/:/ /' | xargs printf "docker login -u %s -p %s")

  build:
    commands:
      - echo build started on `date`
      - docker build -t app -f ecs/Dockerfile .

  post_build:
    commands:
      - echo post_build started on `date`
      - bash -cxe '
        IMAGES=(app);
        LATEST="$(echo "$CODEBUILD_RESOLVED_SOURCE_VERSION" | cut -c 1-8)";
        for I in "${!IMAGES[@]}"; do
          IMAGE="${IMAGES[I]}";
          for TAG in latest "$LATEST"; do
            docker tag "$IMAGE" "$REPOSITORY_URL:$IMAGE.$TAG";
            docker push "$REPOSITORY_URL:$IMAGE.$TAG";
          done;
        done;
        '
      - printf '[{"name":"app","imageUri":"%s"}]' $REPOSITORY_URL:app.$(echo "$CODEBUILD_RESOLVED_SOURCE_VERSION" | cut -c 1-8) > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json